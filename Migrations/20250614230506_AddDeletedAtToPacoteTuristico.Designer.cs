// <auto-generated />
using System;
using AgenciaTurismo.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AgenciaTurismo.Migrations
{
    [DbContext(typeof(DbContexto))]
    [Migration("20250614230506_AddDeletedAtToPacoteTuristico")]
    partial class AddDeletedAtToPacoteTuristico
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.6");

            modelBuilder.Entity("AgenciaTurismo.Models.CidadeDestino", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("PacoteTuristicoId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PaisDestinoId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("PacoteTuristicoId");

                    b.HasIndex("PaisDestinoId");

                    b.ToTable("CidadeDestino");
                });

            modelBuilder.Entity("AgenciaTurismo.Models.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Telefone")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("AgenciaTurismo.Models.PacoteTuristico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Preco")
                        .HasColumnType("TEXT");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Pacotes");
                });

            modelBuilder.Entity("AgenciaTurismo.Models.PaisDestino", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Paises");
                });

            modelBuilder.Entity("AgenciaTurismo.Models.Reserva", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ClienteId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataReserva")
                        .HasColumnType("TEXT");

                    b.Property<int>("PacoteTuristicoId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("PacoteTuristicoId");

                    b.HasIndex("ClienteId", "PacoteTuristicoId", "DataReserva")
                        .IsUnique();

                    b.ToTable("Reservas");
                });

            modelBuilder.Entity("AgenciaTurismo.Models.CidadeDestino", b =>
                {
                    b.HasOne("AgenciaTurismo.Models.PacoteTuristico", null)
                        .WithMany("Destinos")
                        .HasForeignKey("PacoteTuristicoId");

                    b.HasOne("AgenciaTurismo.Models.PaisDestino", "PaisDestino")
                        .WithMany("CidadeDestino")
                        .HasForeignKey("PaisDestinoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PaisDestino");
                });

            modelBuilder.Entity("AgenciaTurismo.Models.Reserva", b =>
                {
                    b.HasOne("AgenciaTurismo.Models.Cliente", "Cliente")
                        .WithMany("Reservas")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AgenciaTurismo.Models.PacoteTuristico", "PacoteTuristico")
                        .WithMany("Reservas")
                        .HasForeignKey("PacoteTuristicoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("PacoteTuristico");
                });

            modelBuilder.Entity("AgenciaTurismo.Models.Cliente", b =>
                {
                    b.Navigation("Reservas");
                });

            modelBuilder.Entity("AgenciaTurismo.Models.PacoteTuristico", b =>
                {
                    b.Navigation("Destinos");

                    b.Navigation("Reservas");
                });

            modelBuilder.Entity("AgenciaTurismo.Models.PaisDestino", b =>
                {
                    b.Navigation("CidadeDestino");
                });
#pragma warning restore 612, 618
        }
    }
}
